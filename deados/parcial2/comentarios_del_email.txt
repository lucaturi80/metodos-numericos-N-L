(1a)  
  Se ve en los datos que el valor minimo del potencial esta en un punto cerca de 3.55nm.
   Parece que cuando los atomos se acercan a mas de 3.4nm (aprox) empieza a actuar la fuerza de 
  repulcion que aumenta en energia muy rapidamente conforme los atomos se acercan mas, en el punto cerca de 3.55nm 
  la fuerza de atraccion alcansa su valor maximo y mientras se van alejando los atomos esta fuerza va
  disminuyendo de manera lenta hasta que en algun punto mas alla de los que mustran las mediciones
  la fuerza de atranccion es 0.
   Esta fuerza haria que en el dimero los dos atomos oscilaran alrededor del punto en el que cambia 
  de ser fuerza de atraccion a fuerza de repulcion.


(1b)
  Los resultados obtenidos del gnuplot son

Final set of parameters            Asymptotic Standard Error
=======================            ==========================
prfpot          = 125.738          +/- 0.1938       (0.1541%)
sigma           = 0.334454         +/- 2.767e-05    (0.008272%)

(1c)
  La derivada 3ra de V(t) es 
F(x) = 4 * epsilon * ( (sigma**12)*(-12)*(-13)*(-14)* x**(-15) - (sigma**6)*((-6)*(-7)*(-8)* x**(-9)))
y como podemos apreciar en parcial2c_drvda3ra.pdf generado por parcial2c_drvda3ra.gp
el modulo de la funcion alcanza su maximo al inicio del intervalo. Por lo tanto una cota de |v'''(r)| es |v'''(0.37)| = 6204265.26.
Por otro lado, con parcial2c_cotardndeo.f90 nos damos cuenta que la cota del error de redondeo es 10**(-15)
entonces una cota del error, sabiendo que fue calculada con la formula de 3 puntos centrada, es 10**(-15) / 0.005 + 0.005**2 * 7404751.7 / 6 
Podemos tomar el termino del error de redondeo como despreciable y seguimos
=0.005**2 * 6204265.26 / 6  = 25.85.
  Por lo tanto el error está acotado por 25.85 en los puntos del intervalo. Y como podemos ver en parcial2c_error.pdf esto se cumple.
Sin embargo tenemos que esa cota nos queda muy holgada pasando de r= 0.4 . Esto ocurre puesto que  V''' se acerca a 0 
rapidamente.
 el error está dado por v'''(epsilon) * h**2 / 6.  Es interesante entonces ver en un mismo grafico el error
y la derivada 3ra en r multiplicada por h**2 / 6. Este es el gráfico parcial2c_erroryf3_1.pdf generado por parcial2c_erroryf3.gp
Como podemos ver los puntos aproximan muy bien a esta funcion. Es decir están en un orden de magnitud demasiado similar. Esto ocurre puesto que
ese epsilon está en realidad en el intervalo [rk-h, rk+h], y dado que h es muy pequeño, epsilon tiene que ser muy similar a rk.
Por lo tanto logicamente v'''(epsilon) * h**2 / 6 va a ser muy similar a v'''(rk) * h**2 / 6. (para toda k). 
 Además, si en lugar de ver una cota del error general para todo el intervalo [0.37, 0.74]  nos concentraramos en 
cada intervalo [rk - h, rk + h], como |v'''| es decreciente(en todo el intervalo SALVO una region entre el 0.45 y 0.50,
como se ve en  parcial2c_drvda3ra.pdf)  La cota de V''' en esos intervalos va a ser v'''(rk-h).
Por lo tanto la cota del error en ese intervalo va a ser v'''(rk-h)*h**2/6. veamos entonces en un grafico el error y v'''(r-h)*h**2/6.
Este es el grafico parcial2c_erroryf3_2.pdf. Como se puede observar, la funcion acota al error. (Salvo en una region entre el 0.45 y 0.50).

(1d)
 resultados del programa:
   valor del potencial de lennard-jones en el punto        0.43750000
                           interpolado usando polinomio de lagrange y los 4 puntos mas proximos a ro
el potencial vale      -79.76378153
y el error relativo seria:        0.00729669
    
valor del potencial de lennard-jones en el punto        0.43750000
                           interpolado usando polinomio de lagrange y los 8 puntos mas proximos a ro
el potencial vale      -79.68676279
y el error relativo seria:        0.00825523

valor del potencial de lennard-jones en el punto        0.43750000
                             interpolado usando polinomio de lagrange y todos los puntos del archivo
el potencial vale      -78.41551416
y el error relativo seria:        0.02407660


una observacion es que la interpocacion que hicimos usando menos datos fueron mas exactas que en las que usamos mas datos, esto se podria deber a que el polinomio de lagrange, al intentar que la funcion sea exacta en mas puntos las iterpolaciones que hace son peores, capaz convendria hacer un ajuste por cuadrados minimos o algun ajuste, que la interpolacion es mejor mientras mas puntos conoscas, igual los errores fueron del orden de 10**(-2)


